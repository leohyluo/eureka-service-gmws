spring:
  application: 
    name: smart-imate  
server:
  port: 9092
service:  
  register:
    center:
      ip: 127.0.0.1
      hostname: peer1
      port: 9081
eureka:
  client:
    serviceUrl:
      defaultZone: http://${service.register.center.hostname}:${service.register.center.port}/eureka/
    registry-fetch-interval-seconds: 5 #拉取服务注册信息时间间隔,默认为30秒
  instance:
    metadataMap:
      instanceId: ${spring.application.name}:${random.value}
      lhyserviceName: iebm-gmws-smartImate-service #自定义元数据,不会影响客户端行为      
    lease-renewal-interval-in-seconds: 5 #心跳时间,默认为30秒
    lease-expiration-duration-in-seconds: 10 #若eureka server在这时间内没收到心跳则移除该instance,默认为90秒
management:
  port: 19092 #指定healthcheck监控的http端口,如不指定则使用和server相同的端口
  health:
    mail:
      enabled: false  #不监控health.mail
#gmws-knowleadge-disease:
#  ribbon:
#    NFLoadBalancerRuleClassName: com.netflix.loadbalancer.RandomRule #配置ribbion client的策略(响应时间加权),此种配置方式优先级高于java编程的方式
    #备注(这种配置方式不成功，原因待查)       
info:
  name: ${spring.application.name} #与health一样访问
  spring-boot-version: "@project.parent.parent.version@" #从pom.xml配置文件获取
  registry-fetch-interval-seconds: ${eureka.client.registry-fetch-interval-seconds}
  lease-renewal-interval-in-seconds: ${eureka.instance.lease-renewal-interval-in-seconds}
  lease-expiration-duration-in-seconds: ${eureka.instance.lease-expiration-duration-in-seconds}